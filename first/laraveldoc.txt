# php artisan serve: Run server
# App - Heart of Laravel
# view file "welcome.blade" - first execute this page.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## How to Call View

=> Route::view('first','first');
=>
Route::get('/first', function () {
    return view('first');
});

------------------------print routes-----------------------------
Route::get('/first/{id}',function($id){  
    echo $id;
    return View('first');

});

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## Create Controller 
=>CMD : php artisan make:controller user
or 
CMD : php artisan make:controller HomeController

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## Routes calling controller
=> use App\Http\Controllers\HomeController; - mention the name of controller
=> define the route as below -> Route::get('/',[HomeController::class,'index']);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## How to pass Id & Data Dynamically ##
### Controller ###
    function careerDetail($id){            
        return view('career_detail',array('id'=>$id));
    }
### View ###
    => view file should be 'blade.php'
    => You can call it as like - {{ $prod_id }}
    <?php echo $id; ?>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## Create Component ##
CMD : php artisan make:component slidebar
# Version 7+. 
# Piece of code.

STEPS: CMD : php artisan make:component sidebar
=> Component is created in app view as 'sidebar' this is the main coding file
=> Define Route in Web.php file for instance: 
    Route::view('page','page');
    Route::view('page2','page2');
=> Create view as name :
    =>page and page 2 
    => call the componenet as like : <x-sidebar />
=> Pass Values in component from view:
    => <x-sidebar name="Laxman" address="Pune" />
=> Access values in component:
    => view/components:
        <div>
            <h1>My name is {{ $name }} and address is {{ $address }}</h1>
        </div>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## 3rd ##
Blade Template
=> access array within array like below:
 -> Passing in web.php 
    Route::get('/web',function(){   
        //return view('web',array("name" => 'Laxman'));
        return view('web',array('data'=> array('fname' => 'Laxman', 'lname' => 'Kendre')));
    });
 -> Accessing in view file:

    {{ $data['fname'] }}
    {{ $data['lname'] }}

 -> if statement in laravel:
 
    // if is laravel php  
    @if($data['fname'] == 'Laxman' && $data['lname'] == "Kendre")
        {{ 'I am fine!!' }}
    @else
       {{ 'no' }}
    @endif

    // if is normal  php 
    <?php 
    if( $data['fname'] == 'Laxman'){
        echo "Fine";
    }
    ?>


// For loop
@for($i=0;$i<5;$i++)
    {{ $i }}
@endfor

// For Each Loop
@foreach($data as $list)
{{ $list }}
@endforeach


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## 4th ## Middleware

=> request and responce between (middleware ) exists
=> type (3)
1] global. 2] group. 3] route.  

CMD : php artisan make:middleware UserCheck
# Folder/ files
 => App->Http->middleware

# in Kernal.php register middleware like below
 => \App\Http\Middleware\UserCheck::class, - Global Middleware


#### Global Middleware ###
 ----- write below code for redirect blade UserCheck.php Middleware -----
 ----- write below code for redirect blade UserCheck.php Middleware -----

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class UserCheck
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {

        if($request->balance > 1000 ){
            return redirect('denied');
        }
        return $next($request);
    }
}

 ----- write  code for redirect blade -----
 ----- write  code for redirect blade -----

#### Route Middleware ###
## web.php  : define routes.
    => Route::view('page','page')->middleware("UserCheck");
## kernal.php : add below line in file : 
    =>'UserCheck' => \App\Http\Middleware\UserCheck::class, 59
## access link : http://127.0.0.1:8000/page?balance=100000
    => Redirect on denied page.

#### Group Middleware ###

 => web.php:
    // Group middleware
    Route::group(['middleware' => ['UserCheck'] ],function(){
        Route::view('page','page');
        Route::view('page2','page2');
    });
    // Group middleware
=> kernel.php:

    // Group middleware
        'UserCheck' => [
            \App\Http\Middleware\UserCheck::class,
        ],
    // Group middleware

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 ### Form ###
 => {{csrf_field()}} - if we are using post request.
 
 ## Form Validation ##
 request.validate([
    'name' => 'required|min:3|max:10',
    'email' => 'required',
 ])

1]  @error('name')
       {{$message}}
    @enderror
2] 


---------------Form form.blade.php ------------

<h1>Form View</h1>
<form method="post" action="formSubmit">{{ csrf_field() }}
    <div class="form-controller">
        <input name="fname" placeholder="Name*" type="text"/>
    </div>
    @error('fname')
        {{$message}}
    @enderror
    <div class="form-controller">
        <input type="text" name="email" placeholder="Email*" />
    </div>
    @error('email')
        {{$message}}
    @enderror
    <input type='submit' name='Submit' value='Submit' />
</form>



---------------Form Controller form.php ------------
function index(Request $request){
    $request->validate([
        'fname' => 'required|min:3|max:10',
        'email' => 'required|email',
    ]);
    // //return $request->all();
    echo "hi";
    
}

=> -------- Auto Populate the Input Values --------
    ##]  value="{{ old('name') }}"



%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 ### Session ###

1] function session_set(Request $request){        
    $request->session()->put('name','Laxman');
    //echo "session_set";
}
2] function session_get(Request $request){        
    echo $request->session()->get('name');
}
3] function session_remove(Request $request){
    return $request->session()->forget('name');
                                                                                                                                                                                                                                                                                                                                                         
}
4]  function session_check(Request $request){
        if( $request->session()->has('name') ){
            echo "Yes";
        }else{
            echo "No";
        }

    }


------------- Route Create for Session ------------------
// Session 
Route::get('/session_set',[ApplyNow::class, 'session_set']);
Route::get('/session_get',[ApplyNow::class,'session_get']);
Route::get('/session_remove',[ApplyNow::class,'session_remove']);
Route::get('/session_check',[ApplyNow::class, 'session_check']);




%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 ### Database ###

 ------------------ db end -------------------
 ------------------ db end -------------------

 <?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class DB_test extends Controller
{
    //select
    function select(){
        //return DB::table('emp')->get();

        // get all records
        // $result = DB::table('emp')->get();
        
        // get single record
        // $result = DB::table('emp')->where('eid',1)->get();

        // use conditional operators
        // exists(), doesntExists(), count(), max('id'), min('id'),avg('id')
        //$result = DB::table('emp')->where('eid','>',1)->get(); // you can use the conditional operators: > < = <= >= !=
        
        // get only id
        //$result = DB::table('emp')->where('eid','>',1)->select('eid')->get();
        
        // get id and name        
        //$result = DB::table('emp')->where('eid','>',1)->select(['eid','empname'])->get();

        // write raw query
        // $result = DB::select( 'select * from emp where eid = 1' );

        // order by : desc, asc 
        $result = DB::table('emp')->orderBy('eid','desc')->get();


        // Insert 
        // DB::table('emp')->insert(
        //     array('eid'=> 10, 'empname' => 'lkendre')
        // );

        
        echo "<pre>";
        print_r( $result );
    }
    function insert(){
        DB::table('emp')->insert(
            array('empname'=>'Employee Lk')
        );
    }
    function update(){
        DB::table('emp')->where('empname','=','Employee Lk')->update(
            array('empname' => 'Laxman Kendre')
        );
    }
    function delete(){
        DB::table('emp')->where('eid','=','11')->delete();
    }
}

------------------ db end -------------------
------------------ db end -------------------


%%%%%%%%%%%%%%%%%%%%%%%%%%%%

---------------------How to create models ----------------------
---------------------How to create models ----------------------
 ### Models Creations ###
 # CMD - php artisan make:model Profile
 => creat table in database like profiles (name should be 's')
 =>  access table in controller like:
    namespace App\Http\Controllers;
    use Illuminate\Http\Request;
    use App\Models\Profile;
    class User_Profile extends Controller
    {
        //
        function index(){
            return Profile::all();
        }
    }



================ Table is different ================
 ## use in model

class Profile extends Model
{
    use HasFactory;
    protected $table = "emp";
}


>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
// $res =  Profile::find(1);
// $res->delete();
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

---------------------How to create models ----------------------
---------------------How to create models ----------------------


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%