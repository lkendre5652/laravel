# php artisan serve: Run server
# App - Heart of Laravel
# view file "welcome.blade" - first execute this page.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## How to Call View

=> Route::view('first','first');
=>
Route::get('/first', function () {
    return view('first');
});

------------------------print routes-----------------------------
Route::get('/first/{id}',function($id){  
    echo $id;
    return View('first');

});

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## Create Controller 
=>CMD : php artisan make:controller user
or 
CMD : php artisan make:controller HomeController

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## Routes calling controller
=> use App\Http\Controllers\HomeController; - mention the name of controller
=> define the route as below -> Route::get('/',[HomeController::class,'index']);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## How to pass Id & Data Dynamically ##
### Controller ###
    function careerDetail($id){            
        return view('career_detail',array('id'=>$id));
    }
### View ###
    => view file should be 'blade.php'
    => You can call it as like - {{ $prod_id }}
    <?php echo $id; ?>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## Create Component ##
CMD : php artisan make:component slidebar
# Version 7+. 
# Piece of code.

STEPS: CMD : php artisan make:component sidebar
=> Component is created in app view as 'sidebar' this is the main coding file
=> Define Route in Web.php file for instance: 
    Route::view('page','page');
    Route::view('page2','page2');
=> Create view as name :
    =>page and page 2 
    => call the componenet as like : <x-sidebar />
=> Pass Values in component from view:
    => <x-sidebar name="Laxman" address="Pune" />
=> Access values in component:
    => view/components:
        <div>
            <h1>My name is {{ $name }} and address is {{ $address }}</h1>
        </div>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## 3rd ##
Blade Template
=> access array within array like below:
 -> Passing in web.php 
    Route::get('/web',function(){   
        //return view('web',array("name" => 'Laxman'));
        return view('web',array('data'=> array('fname' => 'Laxman', 'lname' => 'Kendre')));
    });
 -> Accessing in view file:

    {{ $data['fname'] }}
    {{ $data['lname'] }}

 -> if statement in laravel:
 
    // if is laravel php  
    @if($data['fname'] == 'Laxman' && $data['lname'] == "Kendre")
        {{ 'I am fine!!' }}
    @else
       {{ 'no' }}
    @endif

    // if is normal  php 
    <?php 
    if( $data['fname'] == 'Laxman'){
        echo "Fine";
    }
    ?>


// For loop
@for($i=0;$i<5;$i++)
    {{ $i }}
@endfor

// For Each Loop
@foreach($data as $list)
{{ $list }}
@endforeach


%%%%%%%%%%%%%%%%%%%%%%%%%%%%
## 4th ## Middleware

=> request and responce between (middleware ) exists
=> type (3)
1] global. 2] group. 3] route.  

CMD : php artisan make:middleware UserCheck
# Folder/ files
 => App->Http->middleware

# in Kernal.php register middleware like below
 => \App\Http\Middleware\UserCheck::class, - Global Middleware


#### Global Middleware ###
 ----- write below code for redirect blade UserCheck.php Middleware -----
 ----- write below code for redirect blade UserCheck.php Middleware -----

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class UserCheck
{
    /**
     * Handle an incoming request.
     *
     * @param  \Closure(\Illuminate\Http\Request): (\Symfony\Component\HttpFoundation\Response)  $next
     */
    public function handle(Request $request, Closure $next): Response
    {

        if($request->balance > 1000 ){
            return redirect('denied');
        }
        return $next($request);
    }
}

 ----- write  code for redirect blade -----
 ----- write  code for redirect blade -----

#### Route Middleware ###
## web.php  : define routes.
    => Route::view('page','page')->middleware("UserCheck");
## kernal.php : add below line in file : 
    =>'UserCheck' => \App\Http\Middleware\UserCheck::class, 59
## access link : http://127.0.0.1:8000/page?balance=100000
    => Redirect on denied page.

#### Group Middleware ###

 => web.php:
    // Group middleware
    Route::group(['middleware' => ['UserCheck'] ],function(){
        Route::view('page','page');
        Route::view('page2','page2');
    });
    // Group middleware
=> kernel.php:

    // Group middleware
        'UserCheck' => [
            \App\Http\Middleware\UserCheck::class,
        ],
    // Group middleware

%%%%%%%%%%%%%%%%%%%%%%%%%%%%

